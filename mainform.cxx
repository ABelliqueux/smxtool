// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "mainform.h"

void MainUI::cb_viewDepthToggle_i(Fl_Menu_*, void*) {
  glviewport->redraw();
}
void MainUI::cb_viewDepthToggle(Fl_Menu_* o, void* v) {
  ((MainUI*)(o->parent()))->cb_viewDepthToggle_i(o,v);
}

Fl_Menu_Item MainUI::menu_[] = {
 {"&File", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"&Open", 0x4006f,  (Fl_Callback*)loadModelFile_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"&Save", 0x40073,  (Fl_Callback*)saveModelFile_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Save &As", 0,  (Fl_Callback*)saveModelFileAs_cb, 0, 128, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Merge...", 0,  (Fl_Callback*)mergeModelFile_cb, 0, 128, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"E&xit", 0x8ffc1,  (Fl_Callback*)exitItem_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&Edit", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Bring to &Front", 0xff50,  (Fl_Callback*)selBringFront_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Send to &Back", 0xff57,  (Fl_Callback*)selSendBack_cb, 0, 128, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Select &All", 0x40061,  (Fl_Callback*)selectAllItem_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"&Invert Selection", 0x40069,  (Fl_Callback*)invertSelectionItem_cb, 0, 128, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"Editor &Settings...", 0,  (Fl_Callback*)settingsItem_cb, (void*)(0), 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&View", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {"&Depth Test", 0,  (Fl_Callback*)MainUI::cb_viewDepthToggle, 0, 6, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {0,0,0,0,0,0,0,0,0},
 {"&About", 0,  (Fl_Callback*)aboutItem_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 12, 0},
 {0,0,0,0,0,0,0,0,0}
};
Fl_Menu_Item* MainUI::viewDepthToggle = MainUI::menu_ + 15;

#include <FL/Fl_Image.H>
static const unsigned char idata_file_open[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,211,209,105,255,211,209,105,255,211,209,105,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,211,209,105,255,211,209,105,255,211,209,
105,255,211,209,105,255,211,209,105,255,211,209,105,255,211,209,105,255,211,209,
105,255,211,209,105,255,211,209,105,255,211,209,105,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,211,209,105,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,0,0,0,0,0,0,0,0,255,211,209,105,255,0,0,0,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,255,211,209,105,255,0,0,0,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,172,170,87,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,211,
209,105,255,0,0,0,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,172,170,87,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,211,209,105,255,0,0,
0,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,172,170,
87,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,211,209,105,255,0,0,0,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,172,170,87,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,255,211,209,105,255,0,0,0,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,131,255,252,250,
131,255,252,250,131,255,252,250,131,255,172,170,87,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,255,211,209,105,255,0,0,0,255,252,250,131,255,172,170,87,255,172,170,
87,255,172,170,87,255,172,170,87,255,172,170,87,255,172,170,87,255,172,170,87,
255,172,170,87,255,172,170,87,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_file_open() {
  static Fl_Image *image = new Fl_RGB_Image(idata_file_open, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_file_save[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,
0,0,0,255,18,34,77,255,0,0,0,255,211,212,214,255,211,212,214,255,211,212,214,
255,18,34,77,255,18,34,77,255,211,212,214,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,255,18,34,77,255,0,0,0,255,211,212,
214,255,211,212,214,255,211,212,214,255,18,34,77,255,18,34,77,255,211,212,214,
255,0,0,0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,
0,0,255,18,34,77,255,0,0,0,255,211,212,214,255,211,212,214,255,211,212,214,
255,18,34,77,255,18,34,77,255,211,212,214,255,0,0,0,255,18,34,77,255,0,0,0,255,
0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,255,18,34,77,255,0,0,0,255,211,
212,214,255,211,212,214,255,211,212,214,255,211,212,214,255,211,212,214,255,211,
212,214,255,0,0,0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,
124,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,
28,54,124,255,28,54,124,255,28,54,124,255,28,54,124,255,28,54,124,255,28,54,
124,255,28,54,124,255,28,54,124,255,28,54,124,255,28,54,124,255,28,54,124,255,
18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,18,34,77,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,0,0,0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
255,28,54,124,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,
0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,28,54,124,255,0,0,0,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,18,34,77,255,0,0,
0,255,0,0,0,0,0,0,0,0,0,0,0,255,18,34,77,255,0,0,0,255,191,191,191,255,191,
191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,191,
191,191,255,191,191,191,255,0,0,0,255,18,34,77,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_file_save() {
  static Fl_Image *image = new Fl_RGB_Image(idata_file_save, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_icon_bg[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,130,143,243,255,130,143,243,255,
130,143,243,255,130,143,243,255,130,143,243,255,130,143,243,255,130,143,243,255,
130,143,243,255,130,143,243,255,130,143,243,255,130,143,243,255,130,143,243,255,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,130,143,243,255,130,143,243,255,130,143,
243,255,130,143,243,255,130,143,243,255,130,143,243,255,130,143,243,255,130,143,
243,255,130,143,243,255,130,143,243,255,130,143,243,255,30,45,160,255,0,0,0,255,
0,0,0,0,0,0,0,0,0,0,0,255,113,127,240,255,113,127,240,255,113,127,240,255,113,
127,240,255,113,127,240,255,113,127,240,255,113,127,240,255,113,127,240,255,12,
18,64,255,113,127,240,255,113,127,240,255,30,45,160,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,255,113,127,240,255,113,127,240,255,30,45,160,255,30,45,160,255,30,
45,160,255,113,127,240,255,113,127,240,255,113,127,240,255,12,18,64,255,113,
127,240,255,113,127,240,255,30,45,160,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,
95,111,236,255,95,111,236,255,30,45,160,255,30,45,160,255,30,45,160,255,95,111,
236,255,30,45,160,255,30,45,160,255,12,18,64,255,95,111,236,255,95,111,236,255,
30,45,160,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,30,45,160,255,30,45,160,255,
30,45,160,255,30,45,160,255,30,45,160,255,95,111,236,255,30,45,160,255,12,18,
64,255,12,18,64,255,12,18,64,255,95,111,236,255,30,45,160,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,255,12,18,64,255,12,18,64,255,30,45,160,255,30,45,160,255,30,
45,160,255,30,45,160,255,30,45,160,255,12,18,64,255,12,18,64,255,12,18,64,255,
12,18,64,255,12,18,64,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,12,18,64,255,12,
18,64,255,30,45,160,255,30,45,160,255,12,18,64,255,12,18,64,255,12,18,64,255,
12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,
18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,
18,64,255,12,18,64,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,12,18,64,255,12,18,
64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,
64,255,12,18,64,255,12,18,64,255,12,18,64,255,12,18,64,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_icon_bg() {
  static Fl_Image *image = new Fl_RGB_Image(idata_icon_bg, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_tool_paint_hitmap[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,255,255,0,24,255,255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,102,57,49,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
255,255,0,24,255,255,0,24,255,255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,255,102,57,49,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,102,57,49,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,0,0,
0,255,0,0,0,0,0,0,0,255,102,57,49,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,
24,255,255,0,24,255,0,0,0,255,251,242,54,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,24,255,255,0,24,255,255,0,24,255,255,
0,24,255,0,0,0,255,0,0,0,255,251,242,54,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,24,255,255,0,24,255,255,0,24,
255,0,0,0,255,63,63,116,255,63,63,116,255,0,0,0,255,255,0,24,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,24,255,255,0,24,
255,0,0,0,255,91,110,225,255,91,110,225,255,0,0,0,255,255,0,24,255,255,0,24,255,
255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,
24,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,0,24,255,255,0,24,255,255,0,
24,255,255,0,24,255,255,0,24,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,
24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,255,0,24,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_tool_paint_hitmap() {
  static Fl_Image *image = new Fl_RGB_Image(idata_tool_paint_hitmap, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_view_wiremesh[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
255,255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,
0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,255,255,
255,255,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,255,255,
255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,0,0,0,255,255,255,255,255,0,0,0,255,255,255,255,255,
255,255,255,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,255,255,255,
255,255,255,255,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,255,255,
255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,
0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
255,255,255,255,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,255,255,255,255,0,0,0,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,
0,0,255,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0};
static Fl_Image *image_view_wiremesh() {
  static Fl_Image *image = new Fl_RGB_Image(idata_view_wiremesh, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_view_backcull[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_view_backcull() {
  static Fl_Image *image = new Fl_RGB_Image(idata_view_backcull, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_auto_center[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,223,113,
38,255,223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,223,113,38,255,0,0,0,0,0,
0,0,255,0,0,0,255,0,0,0,0,223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,
0,255,0,0,0,255,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,255,0,0,0,255,223,113,38,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,223,113,38,255,0,0,0,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,255,0,0,0,255,223,113,38,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,223,113,38,255,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,255,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,255,0,0,
0,255,0,0,0,0,223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,223,113,38,255,
223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_auto_center() {
  static Fl_Image *image = new Fl_RGB_Image(idata_auto_center, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_home_center[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,255,
102,57,49,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,102,57,49,255,223,113,38,255,102,57,49,255,143,86,59,255,143,86,59,255,
143,86,59,255,143,86,59,255,102,57,49,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,102,57,49,255,223,113,38,255,223,113,38,255,223,113,38,255,
102,57,49,255,143,86,59,255,143,86,59,255,143,86,59,255,143,86,59,255,102,57,49,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,102,57,49,255,223,113,38,255,223,
113,38,255,223,113,38,255,223,113,38,255,223,113,38,255,102,57,49,255,143,86,59,
255,143,86,59,255,143,86,59,255,143,86,59,255,102,57,49,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,
255,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,255,102,57,49,255,102,
57,49,255,102,57,49,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,110,225,255,
95,205,228,255,95,205,228,255,95,205,228,255,91,110,225,255,99,155,255,255,99,
155,255,255,99,155,255,255,0,0,0,255,91,110,225,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,91,110,225,255,95,205,228,255,95,205,228,255,95,205,228,
255,91,110,225,255,99,155,255,255,99,155,255,255,223,113,38,255,223,113,38,255,
223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,110,225,255,
95,205,228,255,95,205,228,255,95,205,228,255,91,110,225,255,99,155,255,255,223,
113,38,255,99,155,255,255,0,0,0,255,91,110,225,255,223,113,38,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,91,110,225,255,95,205,228,255,95,205,228,255,95,205,
228,255,91,110,225,255,223,113,38,255,99,155,255,255,99,155,255,255,0,0,0,255,
91,110,225,255,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,91,110,
225,255,91,110,225,255,91,110,225,255,91,110,225,255,0,0,0,255,223,113,38,255,0,
0,0,255,0,0,0,255,91,110,225,255,0,0,0,255,0,0,0,255,223,113,38,255,0,0,0,255,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,
255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,
0,0,0,0,0,0,0,255,0,0,0,0,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,113,38,255,
223,113,38,255,223,113,38,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0};
static Fl_Image *image_home_center() {
  static Fl_Image *image = new Fl_RGB_Image(idata_home_center, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_view_orbit[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,
0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,255,255,255,255,255,0,
0,0,255,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_view_orbit() {
  static Fl_Image *image = new Fl_RGB_Image(idata_view_orbit, 13, 13, 4, 0);
  return image;
}

static const unsigned char idata_view_firstperson[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,
255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,
255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,
255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_view_firstperson() {
  static Fl_Image *image = new Fl_RGB_Image(idata_view_firstperson, 13, 13, 4, 0);
  return image;
}

static const unsigned char idata_scarlet2[] =
{172,50,50,255,172,50,50,255,172,50,50,255,172,50,50,255,172,50,50,255,172,
50,50,255,172,50,50,255,0,0,0,255,172,50,50,255,172,50,50,255,172,50,50,255,
172,50,50,255,172,50,50,255,172,50,50,255,172,50,50,255,172,50,50,255,172,50,50,
255,172,50,50,255,172,50,50,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,
255,255,0,0,0,255,0,0,0,255,0,0,0,255,172,50,50,255,172,50,50,255,172,50,50,255,
172,50,50,255,172,50,50,255,172,50,50,255,0,0,0,255,0,0,0,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,172,50,50,255,172,
50,50,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
255,172,50,50,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,
255,118,66,138,255,118,66,138,255,0,0,0,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,0,0,0,255,255,255,255,255,118,66,138,255,118,66,138,
255,118,66,138,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,118,66,138,255,
118,66,138,255,118,66,138,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,
255,255,255,255,255,255,255,255,255,118,66,138,255,118,66,138,255,118,66,138,
255,0,0,0,255,255,255,255,255,0,0,0,255,255,255,255,255,255,255,255,255,118,66,
138,255,118,66,138,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,255,
255,255,255,255,255,255,255,255,255,255,255,118,66,138,255,118,66,138,255,0,0,0,
255,255,255,255,255,172,50,50,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,0,0,0,255,172,50,50,255,0,0,0,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,0,0,0,255,172,50,50,255,172,50,50,255,0,0,0,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,0,0,0,255,172,50,50,255,0,0,0,255,172,50,50,
255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,255,255,255,255,255,
255,255,255,0,0,0,255,172,50,50,255,172,50,50,255,0,0,0,0,0,0,0,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,172,50,50,255,
172,50,50,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,255,255,
255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,255,255,
255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_scarlet2() {
  static Fl_Image *image = new Fl_RGB_Image(idata_scarlet2, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_icon_rotate_left[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,
255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,
255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,
255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,
255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_icon_rotate_left() {
  static Fl_Image *image = new Fl_RGB_Image(idata_icon_rotate_left, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_icon_rotate_right[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,
255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,
255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,
255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_icon_rotate_right() {
  static Fl_Image *image = new Fl_RGB_Image(idata_icon_rotate_right, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_icon_expand[] =
{0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255};
static Fl_Image *image_icon_expand() {
  static Fl_Image *image = new Fl_RGB_Image(idata_icon_expand, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_item_add[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,
0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,
255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,
255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,255,255,255,0,255,255,255,0,
255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,
255,0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,
255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,255,255,255,0,
255,191,191,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,255,0,255,191,191,0,
255,191,191,0,255,191,191,0,255,255,255,0,255,255,255,0,255,255,255,0,255,191,
191,0,255,191,191,0,255,191,191,0,255,191,191,0,255,191,191,0,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,255,255,0,255,
255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
0,255,255,255,0,255,255,255,0,255,191,191,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
0,255,191,191,0,255,191,191,0,255,191,191,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_item_add() {
  static Fl_Image *image = new Fl_RGB_Image(idata_item_add, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_item_delete[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,191,255,191,191,191,255,
191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,
191,191,191,255,191,191,191,255,140,140,140,255,140,140,140,255,0,0,0,255,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,191,255,191,191,191,255,191,191,191,255,
191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,140,140,140,255,
140,140,140,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,
191,191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,191,191,255,140,
140,140,255,191,191,191,255,89,89,89,255,140,140,140,255,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,191,255,140,140,140,255,191,191,
191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,191,191,255,89,89,
89,255,140,140,140,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
255,191,191,191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,191,191,
255,140,140,140,255,191,191,191,255,89,89,89,255,140,140,140,255,0,0,0,255,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,191,255,140,140,140,255,
191,191,191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,191,191,255,
89,89,89,255,140,140,140,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,255,191,191,191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,
191,191,255,140,140,140,255,191,191,191,255,89,89,89,255,140,140,140,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,191,255,140,140,
140,255,191,191,191,255,140,140,140,255,191,191,191,255,140,140,140,255,191,191,
191,255,89,89,89,255,140,140,140,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,255,191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,
255,191,191,191,255,191,191,191,255,191,191,191,255,140,140,140,255,140,140,140,
255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,140,140,140,255,
140,140,140,255,140,140,140,255,140,140,140,255,140,140,140,255,140,140,140,255,
140,140,140,255,140,140,140,255,140,140,140,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,
0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_item_delete() {
  static Fl_Image *image = new Fl_RGB_Image(idata_item_delete, 16, 16, 4, 0);
  return image;
}

static const unsigned char idata_replace_item[] =
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,191,191,191,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,
0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,191,191,
191,255,191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,0,0,0,
255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,
255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,
0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,
0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,191,191,191,255,0,0,
0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,255,191,191,191,255,191,191,191,255,191,191,191,255,191,191,191,255,
191,191,191,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,0,0,255,0,
0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static Fl_Image *image_replace_item() {
  static Fl_Image *image = new Fl_RGB_Image(idata_replace_item, 16, 16, 4, 0);
  return image;
}
MainUI::MainUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _MainUI();
}

MainUI::MainUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _MainUI();
}

MainUI::MainUI()
  : Fl_Double_Window(0, 0, 824, 548, "SMX Tool") {
  clear_flag(16);
  _MainUI();
}

void MainUI::_MainUI() {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(14);
this->labelcolor(FL_FOREGROUND_COLOR);
this->callback((Fl_Callback*)mainUI_cb);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 824, 20);
  o->labelsize(12);
  o->textsize(12);
  o->menu(menu_);
} // Fl_Menu_Bar* o
{ Fl_Group* o = new Fl_Group(0, 20, 824, 35);
  o->box(FL_UP_FRAME);
  { Fl_Button* o = new Fl_Button(5, 25, 25, 25);
    o->tooltip("Open File");
    o->box(FL_THIN_UP_BOX);
    o->image( image_file_open() );
    o->labelsize(12);
    o->callback((Fl_Callback*)loadModelButton_cb);
  } // Fl_Button* o
  { Fl_Button* o = new Fl_Button(30, 25, 25, 25);
    o->tooltip("Save File");
    o->box(FL_THIN_UP_BOX);
    o->image( image_file_save() );
    o->labelsize(12);
    o->callback((Fl_Callback*)saveModelButton_cb);
  } // Fl_Button* o
  { Fl_Button* o = new Fl_Button(59, 25, 25, 25);
    o->tooltip("Set Background Geometry");
    o->box(FL_THIN_UP_BOX);
    o->image( image_icon_bg() );
    o->labelsize(12);
    o->callback((Fl_Callback*)loadBgModelFile_cb);
  } // Fl_Button* o
  { paintModeToggle = new Fl_Button(88, 25, 25, 25);
    paintModeToggle->tooltip("Paint Mode");
    paintModeToggle->type(1);
    paintModeToggle->box(FL_THIN_UP_BOX);
    paintModeToggle->image( image_tool_paint_hitmap() );
    paintModeToggle->labelsize(12);
    paintModeToggle->callback((Fl_Callback*)paintModeToggle_cb);
  } // Fl_Button* paintModeToggle
  { Fl_Button* o = new Fl_Button(117, 25, 25, 25);
    o->tooltip("Wireframe Overlay");
    o->type(1);
    o->box(FL_THIN_UP_BOX);
    o->image( image_view_wiremesh() );
    o->labelsize(12);
    o->callback((Fl_Callback*)renderModeToggle_cb, (void*)(0));
  } // Fl_Button* o
  { Fl_Button* o = new Fl_Button(142, 25, 25, 25);
    o->tooltip("Backface Culling");
    o->type(1);
    o->box(FL_THIN_UP_BOX);
    o->value(1);
    o->image( image_view_backcull() );
    o->labelsize(12);
    o->callback((Fl_Callback*)renderModeToggle_cb, (void*)(1));
  } // Fl_Button* o
  { Fl_Button* o = new Fl_Button(172, 25, 25, 25);
    o->tooltip("Reset to Center of Model");
    o->box(FL_THIN_UP_BOX);
    o->image( image_auto_center() );
    o->labelsize(12);
    o->callback((Fl_Callback*)resetPosition_cb);
  } // Fl_Button* o
  { Fl_Button* o = new Fl_Button(197, 25, 25, 25);
    o->tooltip("Reset to Center");
    o->box(FL_THIN_UP_BOX);
    o->image( image_home_center() );
    o->labelsize(12);
    o->callback((Fl_Callback*)homePosition_cb);
  } // Fl_Button* o
  { Fl_Group* o = new Fl_Group(222, 25, 53, 25);
    { Fl_Button* o = new Fl_Button(222, 25, 25, 25);
      o->tooltip("Orbit Perspective");
      o->type(102);
      o->box(FL_THIN_UP_BOX);
      o->value(1);
      o->image( image_view_orbit() );
      o->labelsize(12);
      o->callback((Fl_Callback*)perspModeChange_cb, (void*)(0));
    } // Fl_Button* o
    { Fl_Button* o = new Fl_Button(247, 25, 25, 25);
      o->tooltip("First-person Perspective");
      o->type(102);
      o->box(FL_THIN_UP_BOX);
      o->image( image_view_firstperson() );
      o->labelsize(12);
      o->callback((Fl_Callback*)perspModeChange_cb, (void*)(1));
    } // Fl_Button* o
    o->end();
  } // Fl_Group* o
  { Fl_Group* o = new Fl_Group(275, 25, 513, 25);
    o->end();
    Fl_Group::current()->resizable(o);
  } // Fl_Group* o
  { Fl_Button* o = new Fl_Button(792, 25, 25, 25);
    o->box(FL_THIN_UP_BOX);
    o->image( image_scarlet2() );
    o->labelsize(12);
    o->callback((Fl_Callback*)aboutButton_cb);
  } // Fl_Button* o
  o->end();
} // Fl_Group* o
{ Fl_Tile* o = new Fl_Tile(-15, 55, 839, 493);
  { Fl_Group* o = new Fl_Group(240, 55, 584, 493);
    o->box(FL_DOWN_BOX);
    { glviewport = new glwidget(245, 60, 575, 483);
      glviewport->box(FL_FLAT_BOX);
      glviewport->color((Fl_Color)4);
      glviewport->selection_color(FL_BACKGROUND_COLOR);
      glviewport->labeltype(FL_NORMAL_LABEL);
      glviewport->labelfont(0);
      glviewport->labelsize(14);
      glviewport->labelcolor(FL_FOREGROUND_COLOR);
      glviewport->align(Fl_Align(FL_ALIGN_TOP));
      glviewport->when(FL_WHEN_RELEASE);
      glviewport->end();
      Fl_Group::current()->resizable(glviewport);
    } // glwidget* glviewport
    o->end();
  } // Fl_Group* o
  { Fl_Tabs* o = new Fl_Tabs(0, 55, 240, 493);
    o->labelsize(12);
    { Fl_Group* o = new Fl_Group(0, 75, 240, 473, "Vertex Color && Attributes");
      o->box(FL_THIN_UP_BOX);
      o->labelsize(12);
      { planeSettings = new Fl_Group(8, 96, 222, 441);
        planeSettings->deactivate();
        { Fl_Group* o = new Fl_Group(9, 139, 220, 192, "Color");
          o->box(FL_ENGRAVED_FRAME);
          o->labelsize(12);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
          { Fl_Group* o = new Fl_Group(14, 145, 210, 109);
            { colorPreviewer = new ColorPreview(44, 145, 150, 109);
              colorPreviewer->box(FL_THIN_DOWN_BOX);
              colorPreviewer->color(FL_BACKGROUND_COLOR);
              colorPreviewer->selection_color(FL_BACKGROUND_COLOR);
              colorPreviewer->labeltype(FL_NORMAL_LABEL);
              colorPreviewer->labelfont(0);
              colorPreviewer->labelsize(12);
              colorPreviewer->labelcolor(FL_FOREGROUND_COLOR);
              colorPreviewer->align(Fl_Align(FL_ALIGN_TOP));
              colorPreviewer->when(FL_WHEN_RELEASE);
              colorPreviewer->end();
              Fl_Group::current()->resizable(colorPreviewer);
            } // ColorPreview* colorPreviewer
            { Fl_Group* o = new Fl_Group(15, 145, 25, 109);
              { setColor[0] = new Fl_Button(15, 145, 25, 20, "V0");
                setColor[0]->type(102);
                setColor[0]->labelsize(12);
                setColor[0]->callback((Fl_Callback*)setVcolor_cb, (void*)(0));
              } // Fl_Button* setColor[0]
              { setColor[2] = new Fl_Button(15, 234, 25, 20, "V2");
                setColor[2]->type(102);
                setColor[2]->labelsize(12);
                setColor[2]->callback((Fl_Callback*)setVcolor_cb, (void*)(2));
              } // Fl_Button* setColor[2]
              { Fl_Group* o = new Fl_Group(15, 170, 25, 59);
                o->end();
                Fl_Group::current()->resizable(o);
              } // Fl_Group* o
              o->end();
            } // Fl_Group* o
            { Fl_Group* o = new Fl_Group(199, 145, 25, 109);
              { setColor[1] = new Fl_Button(199, 145, 25, 20, "V1");
                setColor[1]->type(102);
                setColor[1]->labelsize(12);
                setColor[1]->callback((Fl_Callback*)setVcolor_cb, (void*)(1));
              } // Fl_Button* setColor[1]
              { setColor[3] = new Fl_Button(199, 234, 25, 20, "V3");
                setColor[3]->type(102);
                setColor[3]->labelsize(12);
                setColor[3]->callback((Fl_Callback*)setVcolor_cb, (void*)(3));
              } // Fl_Button* setColor[3]
              { Fl_Group* o = new Fl_Group(199, 170, 25, 59);
                o->end();
                Fl_Group::current()->resizable(o);
              } // Fl_Group* o
              o->end();
            } // Fl_Group* o
            o->end();
            Fl_Group::current()->resizable(o);
          } // Fl_Group* o
          { Fl_Group* o = new Fl_Group(14, 259, 210, 64);
            { colorSlider[0] = new Fl_Value_Slider(30, 259, 194, 18, "R");
              colorSlider[0]->type(3);
              colorSlider[0]->labelsize(12);
              colorSlider[0]->maximum(255);
              colorSlider[0]->step(1);
              colorSlider[0]->textsize(12);
              colorSlider[0]->callback((Fl_Callback*)colorSlider_cb, (void*)(0));
              colorSlider[0]->align(Fl_Align(FL_ALIGN_LEFT));
              Fl_Group::current()->resizable(colorSlider[0]);
            } // Fl_Value_Slider* colorSlider[0]
            { colorSlider[1] = new Fl_Value_Slider(30, 282, 194, 18, "G");
              colorSlider[1]->type(3);
              colorSlider[1]->labelsize(12);
              colorSlider[1]->maximum(255);
              colorSlider[1]->step(1);
              colorSlider[1]->textsize(12);
              colorSlider[1]->callback((Fl_Callback*)colorSlider_cb, (void*)(1));
              colorSlider[1]->align(Fl_Align(FL_ALIGN_LEFT));
            } // Fl_Value_Slider* colorSlider[1]
            { colorSlider[2] = new Fl_Value_Slider(30, 305, 194, 18, "B");
              colorSlider[2]->type(3);
              colorSlider[2]->labelsize(12);
              colorSlider[2]->maximum(255);
              colorSlider[2]->step(1);
              colorSlider[2]->textsize(12);
              colorSlider[2]->callback((Fl_Callback*)colorSlider_cb, (void*)(2));
              colorSlider[2]->align(Fl_Align(FL_ALIGN_LEFT));
            } // Fl_Value_Slider* colorSlider[2]
            o->end();
          } // Fl_Group* o
          o->end();
          Fl_Group::current()->resizable(o);
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(9, 350, 220, 187, "Attributes");
          o->box(FL_ENGRAVED_FRAME);
          o->labelsize(12);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
          { Fl_Group* o = new Fl_Group(19, 439, 200, 87, "Blend Mode");
            o->box(FL_ENGRAVED_FRAME);
            o->labelsize(12);
            o->align(Fl_Align(69));
            { blendModeRadio[0] = new Fl_Round_Button(27, 446, 184, 15, "No Blending");
              blendModeRadio[0]->type(102);
              blendModeRadio[0]->down_box(FL_ROUND_DOWN_BOX);
              blendModeRadio[0]->value(1);
              blendModeRadio[0]->labelsize(12);
              blendModeRadio[0]->callback((Fl_Callback*)blendModeSet_cb, (void*)(0));
              blendModeRadio[0]->align(Fl_Align(68|FL_ALIGN_INSIDE));
              Fl_Group::current()->resizable(blendModeRadio[0]);
            } // Fl_Round_Button* blendModeRadio[0]
            { blendModeRadio[1] = new Fl_Round_Button(27, 461, 184, 15, "0: 50% + 50%");
              blendModeRadio[1]->type(102);
              blendModeRadio[1]->down_box(FL_ROUND_DOWN_BOX);
              blendModeRadio[1]->labelsize(12);
              blendModeRadio[1]->callback((Fl_Callback*)blendModeSet_cb, (void*)(1));
              blendModeRadio[1]->align(Fl_Align(68|FL_ALIGN_INSIDE));
            } // Fl_Round_Button* blendModeRadio[1]
            { blendModeRadio[2] = new Fl_Round_Button(27, 476, 184, 15, "1: 100% + 100%");
              blendModeRadio[2]->type(102);
              blendModeRadio[2]->down_box(FL_ROUND_DOWN_BOX);
              blendModeRadio[2]->labelsize(12);
              blendModeRadio[2]->callback((Fl_Callback*)blendModeSet_cb, (void*)(2));
              blendModeRadio[2]->align(Fl_Align(68|FL_ALIGN_INSIDE));
            } // Fl_Round_Button* blendModeRadio[2]
            { blendModeRadio[3] = new Fl_Round_Button(27, 491, 184, 15, "2: 100% + 50%");
              blendModeRadio[3]->type(102);
              blendModeRadio[3]->down_box(FL_ROUND_DOWN_BOX);
              blendModeRadio[3]->labelsize(12);
              blendModeRadio[3]->callback((Fl_Callback*)blendModeSet_cb, (void*)(3));
              blendModeRadio[3]->align(Fl_Align(68|FL_ALIGN_INSIDE));
            } // Fl_Round_Button* blendModeRadio[3]
            { blendModeRadio[4] = new Fl_Round_Button(27, 506, 184, 15, "3: 100% - 100%");
              blendModeRadio[4]->type(102);
              blendModeRadio[4]->down_box(FL_ROUND_DOWN_BOX);
              blendModeRadio[4]->labelsize(12);
              blendModeRadio[4]->callback((Fl_Callback*)blendModeSet_cb, (void*)(4));
              blendModeRadio[4]->align(Fl_Align(68|FL_ALIGN_INSIDE));
            } // Fl_Round_Button* blendModeRadio[4]
            o->end();
            Fl_Group::current()->resizable(o);
          } // Fl_Group* o
          { Fl_Group* o = new Fl_Group(19, 393, 201, 27, "Lighting Mode");
            o->box(FL_ENGRAVED_FRAME);
            o->labelsize(12);
            o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
            o->deactivate();
            { lightModeRadio[0] = new Fl_Round_Button(24, 400, 53, 15, "None");
              lightModeRadio[0]->type(102);
              lightModeRadio[0]->down_box(FL_ROUND_DOWN_BOX);
              lightModeRadio[0]->value(1);
              lightModeRadio[0]->labelsize(12);
            } // Fl_Round_Button* lightModeRadio[0]
            { lightModeRadio[1] = new Fl_Round_Button(82, 400, 53, 15, "Flat");
              lightModeRadio[1]->type(102);
              lightModeRadio[1]->down_box(FL_ROUND_DOWN_BOX);
              lightModeRadio[1]->labelsize(12);
            } // Fl_Round_Button* lightModeRadio[1]
            { lightModeRadio[2] = new Fl_Round_Button(140, 400, 75, 15, "Smooth");
              lightModeRadio[2]->type(102);
              lightModeRadio[2]->down_box(FL_ROUND_DOWN_BOX);
              lightModeRadio[2]->labelsize(12);
              Fl_Group::current()->resizable(lightModeRadio[2]);
            } // Fl_Round_Button* lightModeRadio[2]
            o->end();
          } // Fl_Group* o
          { doubleSidedCheck = new Fl_Check_Button(19, 359, 201, 15, "Double sided (no culling)");
            doubleSidedCheck->down_box(FL_DOWN_BOX);
            doubleSidedCheck->labelsize(12);
            doubleSidedCheck->callback((Fl_Callback*)planeSettingChange_cb, (void*)(0));
            doubleSidedCheck->align(Fl_Align(68|FL_ALIGN_INSIDE));
          } // Fl_Check_Button* doubleSidedCheck
          o->end();
        } // Fl_Group* o
        { Fl_Group* o = new Fl_Group(8, 96, 221, 24);
          { Fl_Group* o = new Fl_Group(8, 96, 137, 24, "Primitive Type");
            o->box(FL_ENGRAVED_FRAME);
            o->labelsize(12);
            o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
            { primTypeRadio[0] = new Fl_Round_Button(13, 100, 60, 15, "Flat");
              primTypeRadio[0]->type(102);
              primTypeRadio[0]->down_box(FL_ROUND_DOWN_BOX);
              primTypeRadio[0]->value(1);
              primTypeRadio[0]->labelsize(12);
              primTypeRadio[0]->callback((Fl_Callback*)setPrimType_cb, (void*)(0));
              primTypeRadio[0]->align(Fl_Align(68|FL_ALIGN_INSIDE));
            } // Fl_Round_Button* primTypeRadio[0]
            { primTypeRadio[1] = new Fl_Round_Button(68, 100, 66, 15, "Gouraud");
              primTypeRadio[1]->type(102);
              primTypeRadio[1]->down_box(FL_ROUND_DOWN_BOX);
              primTypeRadio[1]->labelsize(12);
              primTypeRadio[1]->callback((Fl_Callback*)setPrimType_cb, (void*)(1));
              primTypeRadio[1]->align(Fl_Align(68|FL_ALIGN_INSIDE));
              Fl_Group::current()->resizable(primTypeRadio[1]);
            } // Fl_Round_Button* primTypeRadio[1]
            o->end();
          } // Fl_Group* o
          { primitiveIndexOutput = new Fl_Value_Output(154, 96, 74, 24, "Index");
            primitiveIndexOutput->labelsize(12);
            primitiveIndexOutput->textsize(12);
            primitiveIndexOutput->align(Fl_Align(FL_ALIGN_TOP_LEFT));
            Fl_Group::current()->resizable(primitiveIndexOutput);
          } // Fl_Value_Output* primitiveIndexOutput
          o->end();
        } // Fl_Group* o
        planeSettings->end();
        Fl_Group::current()->resizable(planeSettings);
      } // Fl_Group* planeSettings
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(0, 75, 240, 473, "Texture");
      o->labelsize(12);
      o->hide();
      { textureSettings = new Fl_Group(9, 88, 221, 301);
        textureSettings->deactivate();
        { Fl_Group* o = new Fl_Group(9, 123, 220, 237, "Mapping");
          o->box(FL_ENGRAVED_BOX);
          o->labelsize(12);
          o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
          { texturePreviewer = new TexturePreview(15, 128, 210, 194);
            texturePreviewer->box(FL_THIN_DOWN_BOX);
            texturePreviewer->color(FL_BACKGROUND_COLOR);
            texturePreviewer->selection_color(FL_BACKGROUND_COLOR);
            texturePreviewer->labeltype(FL_NORMAL_LABEL);
            texturePreviewer->labelfont(0);
            texturePreviewer->labelsize(14);
            texturePreviewer->labelcolor(FL_FOREGROUND_COLOR);
            texturePreviewer->align(Fl_Align(FL_ALIGN_TOP));
            texturePreviewer->when(FL_WHEN_RELEASE);
            texturePreviewer->end();
            Fl_Group::current()->resizable(texturePreviewer);
          } // TexturePreview* texturePreviewer
          { Fl_Group* o = new Fl_Group(15, 327, 210, 28);
            { textureZoom = new Fl_Spinner(156, 332, 69, 23, "Zoom");
              textureZoom->labelsize(12);
              textureZoom->maximum(8);
              textureZoom->textsize(12);
              textureZoom->callback((Fl_Callback*)textureZoom_cb);
              textureZoom->when(FL_WHEN_CHANGED);
              Fl_Group::current()->resizable(textureZoom);
            } // Fl_Spinner* textureZoom
            { Fl_Button* o = new Fl_Button(15, 327, 28, 28);
              o->tooltip("Rotate Coordinates Left");
              o->box(FL_THIN_UP_BOX);
              o->image( image_icon_rotate_left() );
              o->labelsize(12);
              o->callback((Fl_Callback*)rotateTexButton_cb, (void*)(0));
              o->align(Fl_Align(256));
            } // Fl_Button* o
            { Fl_Button* o = new Fl_Button(43, 327, 28, 28);
              o->tooltip("Rotate Coordinates Right");
              o->box(FL_THIN_UP_BOX);
              o->image( image_icon_rotate_right() );
              o->labelsize(12);
              o->callback((Fl_Callback*)rotateTexButton_cb, (void*)(1));
              o->align(Fl_Align(256));
            } // Fl_Button* o
            { Fl_Button* o = new Fl_Button(71, 327, 28, 28);
              o->tooltip("Set Coordinates to Texture Borders");
              o->box(FL_THIN_UP_BOX);
              o->image( image_icon_expand() );
              o->labelsize(12);
              o->callback((Fl_Callback*)expandTexButton_cb);
            } // Fl_Button* o
            o->end();
          } // Fl_Group* o
          o->end();
          Fl_Group::current()->resizable(o);
        } // Fl_Group* o
        { primTexturedToggle = new Fl_Check_Button(9, 88, 220, 15, "Textured");
          primTexturedToggle->tooltip("Make Primitive Textured");
          primTexturedToggle->down_box(FL_DOWN_BOX);
          primTexturedToggle->labelsize(12);
          primTexturedToggle->callback((Fl_Callback*)setPrimTexture_cb, (void*)(2));
        } // Fl_Check_Button* primTexturedToggle
        textureSettings->end();
        Fl_Group::current()->resizable(textureSettings);
      } // Fl_Group* textureSettings
      { Fl_Group* o = new Fl_Group(9, 382, 220, 156, "Texture File");
        o->box(FL_ENGRAVED_FRAME);
        o->labelsize(12);
        o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
        { textureBrowser = new Fl_Browser(15, 387, 210, 113);
          textureBrowser->type(2);
          textureBrowser->labelsize(12);
          textureBrowser->textsize(12);
          textureBrowser->callback((Fl_Callback*)textureBrowser_cb);
          textureBrowser->when(3);
          Fl_Group::current()->resizable(textureBrowser);
        } // Fl_Browser* textureBrowser
        { Fl_Group* o = new Fl_Group(15, 505, 210, 28);
          { Fl_Button* o = new Fl_Button(15, 505, 28, 28);
            o->tooltip("Add Texture");
            o->box(FL_THIN_UP_BOX);
            o->image( image_item_add() );
            o->labelsize(12);
            o->callback((Fl_Callback*)addTextureButton_cb);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(71, 505, 28, 28);
            o->tooltip("Delete Texture");
            o->box(FL_THIN_UP_BOX);
            o->image( image_item_delete() );
            o->labelsize(12);
            o->callback((Fl_Callback*)deleteTextureButton_cb);
          } // Fl_Button* o
          { Fl_Button* o = new Fl_Button(43, 505, 28, 28);
            o->tooltip("Replace Texture");
            o->box(FL_THIN_UP_BOX);
            o->image( image_replace_item() );
            o->labelsize(12);
            o->callback((Fl_Callback*)replaceTextureButton_cb);
          } // Fl_Button* o
          { Fl_Group* o = new Fl_Group(102, 505, 123, 28);
            o->end();
            Fl_Group::current()->resizable(o);
          } // Fl_Group* o
          o->end();
        } // Fl_Group* o
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    o->end();
  } // Fl_Tabs* o
  o->end();
  Fl_Group::current()->resizable(o);
} // Fl_Tile* o
xclass("smxtool.smxtool");
end();
}
