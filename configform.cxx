// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "configform.h"

void ConfigUI::cb_Cancel_i(Fl_Button*, void*) {
  hide();
}
void ConfigUI::cb_Cancel(Fl_Button* o, void* v) {
  ((ConfigUI*)(o->parent()))->cb_Cancel_i(o,v);
}
ConfigUI::ConfigUI(int X, int Y, int W, int H, const char *L)
  : Fl_Double_Window(X, Y, W, H, L) {
  _ConfigUI();
}

ConfigUI::ConfigUI(int W, int H, const char *L)
  : Fl_Double_Window(0, 0, W, H, L) {
  clear_flag(16);
  _ConfigUI();
}

ConfigUI::ConfigUI()
  : Fl_Double_Window(0, 0, 404, 308, "Configuration") {
  clear_flag(16);
  _ConfigUI();
}

void ConfigUI::_ConfigUI() {
this->box(FL_FLAT_BOX);
this->color(FL_BACKGROUND_COLOR);
this->selection_color(FL_BACKGROUND_COLOR);
this->labeltype(FL_NO_LABEL);
this->labelfont(0);
this->labelsize(14);
this->labelcolor(FL_FOREGROUND_COLOR);
this->align(Fl_Align(FL_ALIGN_TOP));
this->when(FL_WHEN_RELEASE);
{ configTabs = new Fl_Tabs(10, 10, 384, 252);
  { editorGroup = new Fl_Group(10, 29, 384, 233, "Editor");
    editorGroup->labelsize(12);
    { Fl_Group* o = new Fl_Group(205, 50, 179, 46, "OpenGL");
      o->box(FL_ENGRAVED_BOX);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { singleBufferToggle = new Fl_Check_Button(211, 59, 165, 15, "Single-buffer mode");
        singleBufferToggle->tooltip("Forces OpenGL context to run in single buffer mode. Can fix Aero being disabl\
ed with newer NVIDIA cards on Windows 7. (restart required)");
        singleBufferToggle->down_box(FL_DOWN_BOX);
        singleBufferToggle->labelsize(12);
      } // Fl_Check_Button* singleBufferToggle
      { shadersToggle = new Fl_Check_Button(211, 75, 165, 15, "GLSL Shaders");
        shadersToggle->tooltip("Enables use of GLSL shaders to accurately represent textured polygons if supp\
orted by your hardware. (restart required)");
        shadersToggle->down_box(FL_DOWN_BOX);
        shadersToggle->labelsize(12);
      } // Fl_Check_Button* shadersToggle
      o->end();
    } // Fl_Group* o
    { Fl_Group* o = new Fl_Group(20, 50, 180, 46, "Editor");
      o->box(FL_ENGRAVED_BOX);
      o->labelsize(12);
      o->align(Fl_Align(FL_ALIGN_TOP_LEFT));
      { systemColorsToggle = new Fl_Check_Button(28, 59, 164, 15, "Use System Colors");
        systemColorsToggle->tooltip("Use the system\'s color scheme.");
        systemColorsToggle->down_box(FL_DOWN_BOX);
        systemColorsToggle->labelsize(12);
      } // Fl_Check_Button* systemColorsToggle
      { easterEggToggle = new Fl_Check_Button(28, 75, 164, 15, "NSFW Easter Egg :)");
        easterEggToggle->tooltip("The question is... Can you find it? :)");
        easterEggToggle->down_box(FL_DOWN_BOX);
        easterEggToggle->labelsize(12);
      } // Fl_Check_Button* easterEggToggle
      o->end();
    } // Fl_Group* o
    editorGroup->end();
  } // Fl_Group* editorGroup
  configTabs->end();
} // Fl_Tabs* configTabs
{ Fl_Button* o = new Fl_Button(316, 270, 78, 25, "Cancel");
  o->labelsize(12);
  o->callback((Fl_Callback*)cb_Cancel);
} // Fl_Button* o
{ Fl_Button* o = new Fl_Button(232, 270, 78, 25, "Ok");
  o->labelsize(12);
  o->callback((Fl_Callback*)configOkayButton_cb);
} // Fl_Button* o
set_modal();
end();
}
