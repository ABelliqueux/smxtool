// generated by Fast Light User Interface Designer (fluid) version 1.0304

#ifndef mainform_h
#define mainform_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
extern void mainUI_cb(Fl_Double_Window*, void*);
#include <FL/Fl_Menu_Bar.H>
extern void loadModelFile_cb(Fl_Menu_*, void*);
extern void saveModelFile_cb(Fl_Menu_*, void*);
extern void saveModelFileAs_cb(Fl_Menu_*, void*);
extern void mergeModelFile_cb(Fl_Menu_*, void*);
extern void exitItem_cb(Fl_Menu_*, void*);
extern void selBringFront_cb(Fl_Menu_*, void*);
extern void selSendBack_cb(Fl_Menu_*, void*);
extern void selectAllItem_cb(Fl_Menu_*, void*);
extern void invertSelectionItem_cb(Fl_Menu_*, void*);
extern void settingsItem_cb(Fl_Menu_*, long);
extern void aboutItem_cb(Fl_Menu_*, void*);
#include <FL/Fl_Group.H>
#include <FL/Fl_Button.H>
extern void loadModelButton_cb(Fl_Button*, void*);
extern void saveModelButton_cb(Fl_Button*, void*);
extern void loadBgModelFile_cb(Fl_Button*, void*);
extern void paintModeToggle_cb(Fl_Button*, void*);
extern void renderModeToggle_cb(Fl_Button*, long);
extern void resetPosition_cb(Fl_Button*, void*);
extern void homePosition_cb(Fl_Button*, void*);
extern void perspModeChange_cb(Fl_Button*, long);
extern void aboutButton_cb(Fl_Button*, void*);
#include <FL/Fl_Tile.H>
#include "glwidget.h"
#include <FL/Fl_Tabs.H>
#include "ColorPreview.h"
extern void setVcolor_cb(Fl_Button*, long);
#include <FL/Fl_Value_Slider.H>
extern void colorSlider_cb(Fl_Value_Slider*, long);
#include <FL/Fl_Round_Button.H>
extern void blendModeSet_cb(Fl_Round_Button*, long);
#include <FL/Fl_Check_Button.H>
extern void planeSettingChange_cb(Fl_Check_Button*, long);
extern void setPrimType_cb(Fl_Round_Button*, long);
#include <FL/Fl_Value_Output.H>
#include "texturepreview.h"
#include <FL/Fl_Spinner.H>
extern void textureZoom_cb(Fl_Spinner*, void*);
extern void rotateTexButton_cb(Fl_Button*, long);
extern void expandTexButton_cb(Fl_Button*, void*);
extern void setPrimTexture_cb(Fl_Check_Button*, long);
#include <FL/Fl_Browser.H>
extern void textureBrowser_cb(Fl_Browser*, void*);
extern void addTextureButton_cb(Fl_Button*, void*);
extern void deleteTextureButton_cb(Fl_Button*, void*);
extern void replaceTextureButton_cb(Fl_Button*, void*);

class MainUI : public Fl_Double_Window {
  void _MainUI();
public:
  MainUI(int X, int Y, int W, int H, const char *L = 0);
  MainUI(int W, int H, const char *L = 0);
  MainUI();
  static Fl_Menu_Item menu_[];
  static Fl_Menu_Item *viewDepthToggle;
private:
  inline void cb_viewDepthToggle_i(Fl_Menu_*, void*);
  static void cb_viewDepthToggle(Fl_Menu_*, void*);
public:
  Fl_Button *paintModeToggle;
  glwidget *glviewport;
  Fl_Group *planeSettings;
  ColorPreview *colorPreviewer;
  Fl_Button *setColor[4];
  Fl_Value_Slider *colorSlider[3];
  Fl_Round_Button *blendModeRadio[5];
  Fl_Round_Button *lightModeRadio[3];
  Fl_Check_Button *doubleSidedCheck;
  Fl_Round_Button *primTypeRadio[2];
  Fl_Value_Output *primitiveIndexOutput;
  Fl_Group *textureSettings;
  TexturePreview *texturePreviewer;
  Fl_Spinner *textureZoom;
  Fl_Check_Button *primTexturedToggle;
  Fl_Browser *textureBrowser;
};
#endif
